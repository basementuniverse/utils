const floatEquals=(e,t,a=Number.EPSILON)=>Math.abs(e-t)<a,clamp=(e,t=0,a=1)=>e<t?t:e>a?a:e,frac=e=>e>=0?e-Math.floor(e):e-Math.ceil(e),lerp=(e,t,a)=>e+(t-e)*a,unlerp=(e,t,a)=>(a-e)/(t-e),blerp=(e,t,a,r,n,o)=>lerp(lerp(e,t,n),lerp(a,r,n),o),remap=(e,t,a,r,n)=>r+(e-t)*(n-r)/(a-t),smoothstep=(e,t,a)=>lerp(e,t,3*Math.pow(a,2)-2*Math.pow(a,3)),radians=e=>Math.PI/180*e,degrees=e=>180/Math.PI*e,randomBetween=(e,t)=>Math.random()*(t-e)+e,randomIntBetween=(e,t)=>Math.floor(Math.random()*(t-e+1))+e,cltRandom=(e=.5,t=.5,a=2)=>{let r=0;for(let e=a;e--;)r+=Math.random();return e+(r-a/2)/(a/2)*t},cltRandomInt=(e,t)=>Math.floor(e+cltRandom(.5,.5,2)*(t+1-e)),weightedRandom=e=>{let t=e.reduce(((e,t)=>e+t),0),a=0;const r=Math.random()*t;for(;t>r;)t-=e[a++];return a-1},lerpArray=(e,t,a=lerp)=>{const r=t*(e.length-1),n=clamp(Math.trunc(r),0,e.length-1);return a(e[n]||0,e[n+1]||0,frac(r))},dot=(e,t)=>e.reduce(((e,a,r)=>e+a*t[r]),0),factorial=e=>{let t=1;for(let a=2;a<=e;a++)t*=a;return t},permutation=(e,t)=>factorial(e)/factorial(e-t),combination=(e,t)=>factorial(e)/(factorial(t)*factorial(e-t)),times=(e,t)=>Array(t).fill(0).map(((t,a)=>e(a))),range=e=>times((e=>e),e),zip=(e,t)=>e.map(((e,a)=>[e,t[a]])),at=(e,t)=>e[t<0?e.length-Math.abs(t+1)%e.length-1:t%e.length],chunk=(e,t)=>times((a=>e.slice(a*t,a*t+t)),Math.ceil(e.length/t)),shuffle=e=>e.slice().sort((()=>Math.random()-.5));"undefined"!=typeof module&&(module.exports={floatEquals:floatEquals,clamp:clamp,frac:frac,lerp:lerp,unlerp:unlerp,blerp:blerp,remap:remap,smoothstep:smoothstep,radians:radians,degrees:degrees,randomBetween:randomBetween,randomIntBetween:randomIntBetween,cltRandom:cltRandom,cltRandomInt:cltRandomInt,weightedRandom:weightedRandom,lerpArray:lerpArray,dot:dot,factorial:factorial,permutation:permutation,combination:combination,times:times,range:range,zip:zip,at:at,chunk:chunk,shuffle:shuffle});